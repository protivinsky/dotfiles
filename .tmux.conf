# Set prefix to space.
unbind C-b
set -g prefix C-a

# Bindings:
# - to see current bindings:
#   list-keys -t {vi,emacs}-{edit,choice,copy}

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Fast toggle (normally prefix-l).
bind ^a last-window

# Intuitive window-splitting keys.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
bind - split-window -v -c '#{pane_current_path}' # normally prefix-"

# # Status bar.
# set -g status-bg '#343d46'
# set -g status-fg white
# set -g status-left-length 40
# set -g status-left '#[fg=yellow]#S â§‰ '
# set -g status-right "#[fg=yellow]$USER@#h #[fg=magenta]%l:%M %p"
# set -g status-interval 60 # Default is 15.
 
# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Highlight active window.
set -w -g window-status-current-bg red

# This has to be conditional on tmux version:
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
    set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
    "set -g mouse on; set -g focus-events on"


# # Restore pre-2.1 behavior of scrolling with the scrollwheel in Vim, less, copy
# # mode etc, otherwise entering copy mode if not already in it.
# #
# #   if in copy mode (pane_in_mode) || using the mouse already (mouse_any_flag)
# #     pass through mouse events to current pane (send -Mt=)
# #   elsif in alternate screen mode
# #     send `Up` key
# #   else
# #     enter copy mode (-e exits if we scroll to the bottom)
# #   end
# #
# bind-key -T root WheelUpPane \
#   if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#     'send -Mt=' \
#     'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
# bind-key -T root WheelDownPane \
#   if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
#     'send -Mt=' \
#     'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

# # Stay in copy mode on drag end, but otherwise exit for mouse up.
# # Requires patch from https://github.com/tmux/tmux/issues/326
# unbind-key -t vi-copy MouseDragEnd1Pane
# bind-key -t vi-copy MouseUp1Pane cancel
# 
# # For those times when C-c and q are not enough.
# bind-key -t vi-copy Escape cancel
 
# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

set -g history-limit 262144

# # Start window and pane numbering at 1, (0 is too hard to reach).
# set -g base-index 1
# set -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-a.
set -s escape-time 0

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# But don't change tmux's own window titles.
set -w -g automatic-rename off

# # Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# # position info in copy mode.
# set -w -g wrap-search off
# 
# # #T      = standard window title (last command, see ~/.bash_profile)
# # #h      = short hostname
# # #S      = session name
# # #W      = tmux window name
# #
# # (Would love to include #(pwd) here as well, but that would only print the
# # current working directory relative to the session -- ie. always the starting
# # cwd -- which is not very interesting).
# set -g set-titles-string "#T : #h > #S > #W"
# 
# # Show bells in window titles.
# set -g window-status-bell-style fg=yellow,bold,underscore
# 
# # Clipper.
# bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"
# 
# # "copy-pipe" requires tmux >= 1.8
# bind-key -t vi-copy Enter copy-pipe "nc -U ~/.clipper.sock"
# 

